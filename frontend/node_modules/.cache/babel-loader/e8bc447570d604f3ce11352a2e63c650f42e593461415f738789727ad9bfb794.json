{"ast":null,"code":"// const API_URL = 'https://your-backend-api.com';  // Replace with your API URL\n\n// export const register = async (email, password, name) => {\n//   try {\n//     const response = await fetch(`${API_URL}/register`, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ email, password, name }),\n//     });\n\n//     if (!response.ok) {\n//       throw new Error('Failed to register');\n//     }\n\n//     const data = await response.json();\n//     return data;\n//   } catch (error) {\n//     console.error('Error registering user:', error);\n//     throw error;\n//   }\n// };\n\n// // Login function\n// export const login = async (email, password) => {\n//   try {\n//     const response = await axios.post(`${API_URL}/login`, { email, password });\n//     const { token, user } = response.data;  // Assuming the API returns a token and user data\n//     // Save the token to localStorage (or sessionStorage) for future authentication\n//     localStorage.setItem('authToken', token);\n//     return user;  // Return the user data\n//   } catch (error) {\n//     throw new Error('Failed to login');\n//   }\n// };\n\n// // Logout function\n// export const logout = () => {\n//   // Remove the token from localStorage (or sessionStorage) to log out the user\n//   localStorage.removeItem('authToken');\n// };\n\nconst API_URL = 'http://localhost:4000/api/user'; // Replace with your actual API URL\n\n// Register function\nexport const register = async userData => {\n  try {\n    const response = await fetch(`${API_URL}/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userData\n      }) // Convert the user data to JSON\n    });\n    if (!response.ok) {\n      throw new Error('Registration failed');\n    }\n    const data = await response.json(); // Parse JSON response\n    return data;\n  } catch (error) {\n    console.error('Registration error:', error);\n    throw error;\n  }\n};\n\n// Login function\nexport const login = async (email, password) => {\n  try {\n    const response = await fetch(`${API_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      }) // Convert email and password to JSON\n    });\n    if (!response.ok) {\n      throw new Error('Login failed');\n    }\n    const data = await response.json(); // Parse JSON response\n    return data; // Return the response data, such as a token or user info\n  } catch (error) {\n    console.error('Login error:', error);\n    throw error;\n  }\n};\n\n// Logout function\nexport const logout = () => {\n  // Clear any session or local storage data related to authentication\n  localStorage.removeItem('authToken');\n  // Optionally redirect to login page or home page\n  window.location.href = '/login';\n};","map":{"version":3,"names":["API_URL","register","userData","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","console","login","email","password","logout","localStorage","removeItem","window","location","href"],"sources":["C:/Users/subha/Desktop/JNU-SMART-SHOP/frontend/src/services/authService.js"],"sourcesContent":["// const API_URL = 'https://your-backend-api.com';  // Replace with your API URL\r\n\r\n// export const register = async (email, password, name) => {\r\n//   try {\r\n//     const response = await fetch(`${API_URL}/register`, {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify({ email, password, name }),\r\n//     });\r\n\r\n//     if (!response.ok) {\r\n//       throw new Error('Failed to register');\r\n//     }\r\n\r\n//     const data = await response.json();\r\n//     return data;\r\n//   } catch (error) {\r\n//     console.error('Error registering user:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// // Login function\r\n// export const login = async (email, password) => {\r\n//   try {\r\n//     const response = await axios.post(`${API_URL}/login`, { email, password });\r\n//     const { token, user } = response.data;  // Assuming the API returns a token and user data\r\n//     // Save the token to localStorage (or sessionStorage) for future authentication\r\n//     localStorage.setItem('authToken', token);\r\n//     return user;  // Return the user data\r\n//   } catch (error) {\r\n//     throw new Error('Failed to login');\r\n//   }\r\n// };\r\n\r\n// // Logout function\r\n// export const logout = () => {\r\n//   // Remove the token from localStorage (or sessionStorage) to log out the user\r\n//   localStorage.removeItem('authToken');\r\n// };\r\n\r\nconst API_URL = 'http://localhost:4000/api/user';  // Replace with your actual API URL\r\n\r\n// Register function\r\nexport const register = async (userData) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({userData}),  // Convert the user data to JSON\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Registration failed');\r\n    }\r\n\r\n    const data = await response.json();  // Parse JSON response\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Registration error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Login function\r\nexport const login = async (email, password) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),  // Convert email and password to JSON\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Login failed');\r\n    }\r\n\r\n    const data = await response.json();  // Parse JSON response\r\n    return data;  // Return the response data, such as a token or user info\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Logout function\r\nexport const logout = () => {\r\n  // Clear any session or local storage data related to authentication\r\n  localStorage.removeItem('authToken');\r\n  // Optionally redirect to login page or home page\r\n  window.location.href = '/login';\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,OAAO,GAAG,gCAAgC,CAAC,CAAE;;AAEnD;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,WAAW,EAAE;MAClDK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACP;MAAQ,CAAC,CAAC,CAAG;IACrC,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;IACxC;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC,CAAE;IACrC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC9C,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,QAAQ,EAAE;MAC/CK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEQ,KAAK;QAAEC;MAAS,CAAC,CAAC,CAAG;IAC9C,CAAC,CAAC;IAEF,IAAI,CAACf,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;IACjC;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC,CAAE;IACrC,OAAOD,IAAI,CAAC,CAAE;EAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,MAAM,GAAGA,CAAA,KAAM;EAC1B;EACAC,YAAY,CAACC,UAAU,CAAC,WAAW,CAAC;EACpC;EACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;AACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}