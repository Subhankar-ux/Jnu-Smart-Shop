{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subha\\\\Desktop\\\\JNU-SMART-SHOP\\\\frontend\\\\src\\\\components\\\\OrderTracking.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderTracking = () => {\n  _s();\n  const [orderId, setOrderId] = useState('');\n  const [orderStatus, setOrderStatus] = useState('');\n  const handleTrackOrder = () => {\n    // In a real-world app, you'd query the backend to get the order status\n    setOrderStatus('Shipped'); // Example response\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Track Your Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Order ID\",\n      value: orderId,\n      onChange: e => setOrderId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTrackOrder,\n      children: \"Track Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), orderStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Order Status: \", orderStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderTracking, \"EMxKhhK1ANlmSfqnQRZlHMllZRg=\");\n_c = OrderTracking;\nexport default OrderTracking;\nvar _c;\n$RefreshReg$(_c, \"OrderTracking\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","OrderTracking","_s","orderId","setOrderId","orderStatus","setOrderStatus","handleTrackOrder","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/subha/Desktop/JNU-SMART-SHOP/frontend/src/components/OrderTracking.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst OrderTracking = () => {\r\n  const [orderId, setOrderId] = useState('');\r\n  const [orderStatus, setOrderStatus] = useState('');\r\n\r\n  const handleTrackOrder = () => {\r\n    // In a real-world app, you'd query the backend to get the order status\r\n    setOrderStatus('Shipped'); // Example response\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Track Your Order</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Order ID\"\r\n        value={orderId}\r\n        onChange={(e) => setOrderId(e.target.value)}\r\n      />\r\n      <button onClick={handleTrackOrder}>Track Order</button>\r\n\r\n      {orderStatus && <p>Order Status: {orderStatus}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderTracking;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACAD,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,oBACEN,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBZ,OAAA;MACEa,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,gBAAgB;MAC5BC,KAAK,EAAEZ,OAAQ;MACfa,QAAQ,EAAGC,CAAC,IAAKb,UAAU,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFZ,OAAA;MAAQmB,OAAO,EAAEZ,gBAAiB;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEtDP,WAAW,iBAAIL,OAAA;MAAAQ,QAAA,GAAG,gBAAc,EAACH,WAAW;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACV,EAAA,CAvBID,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AAyBnB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}