{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subha\\\\Desktop\\\\JNU-SMART-SHOP\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react'; // Import useState, useContext, useEffect from React\nimport { login, logout } from '../services/authService'; // Import functions from authService\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirecting\n//import axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// AuthProvider component\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null); // Define state at the top level\n  const [error, setError] = useState(null); // Define error state here as well\n  const navigate = useNavigate(); // Initialize navigate for redirecting\n  //const url = \"http://localhost:4000\";\n  // Check if the user is authenticated by checking for token in localStorage\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      const storedUser = JSON.parse(localStorage.getItem('user'));\n      setUser(storedUser);\n    }\n  }, []);\n  const handleLogin = async (email, password) => {\n    try {\n      const loggedInUser = await login(email, password); // Use the login function from authService\n      setUser(loggedInUser); // Update the state with logged-in user data\n      localStorage.setItem('user', JSON.stringify(loggedInUser)); // Optionally save user data in localStorage\n      navigate('/cart'); // Redirect user to dashboard after login\n    } catch (err) {\n      setError('Login failed. Please try again.'); // Set error message in case of failure\n      console.error(err);\n    }\n  };\n  const handleLogout = () => {\n    logout(); // Call logout function from authService\n    setUser(null); // Clear user data from state\n    navigate('/login'); // Redirect user to login page after logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      error,\n      handleLogin,\n      handleLogout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"vnOWxrOQoEqwd1NZCMfZdhA4jAk=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","login","logout","useNavigate","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","error","setError","navigate","token","localStorage","getItem","storedUser","JSON","parse","handleLogin","email","password","loggedInUser","setItem","stringify","err","console","handleLogout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/subha/Desktop/JNU-SMART-SHOP/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';  // Import useState, useContext, useEffect from React\r\nimport { login, logout } from '../services/authService';  // Import functions from authService\r\nimport { useNavigate } from 'react-router-dom';  // Import useNavigate for redirecting\r\n//import axios from \"axios\";\r\n\r\nconst AuthContext = createContext();\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\n// AuthProvider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);  // Define state at the top level\r\n  const [error, setError] = useState(null);  // Define error state here as well\r\n  const navigate = useNavigate();  // Initialize navigate for redirecting\r\n  //const url = \"http://localhost:4000\";\r\n  // Check if the user is authenticated by checking for token in localStorage\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      const storedUser = JSON.parse(localStorage.getItem('user'));\r\n      setUser(storedUser);\r\n    }\r\n  }, []);\r\n\r\n  const handleLogin = async (email, password) => {\r\n    try {\r\n      const loggedInUser = await login(email, password);  // Use the login function from authService\r\n      setUser(loggedInUser);  // Update the state with logged-in user data\r\n      localStorage.setItem('user', JSON.stringify(loggedInUser));  // Optionally save user data in localStorage\r\n      navigate('/cart');  // Redirect user to dashboard after login\r\n    } catch (err) {\r\n      setError('Login failed. Please try again.');  // Set error message in case of failure\r\n      console.error(err);\r\n    }\r\n  };\r\n  \r\n  const handleLogout = () => {\r\n    logout();  // Call logout function from authService\r\n    setUser(null);  // Clear user data from state\r\n    navigate('/login');  // Redirect user to login page after logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, error, handleLogin, handleLogout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO,CAAC,CAAE;AAChF,SAASC,KAAK,EAAEC,MAAM,QAAQ,yBAAyB,CAAC,CAAE;AAC1D,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAE;AACjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,WAAW,gBAAGT,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMU,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAOT,UAAU,CAACO,WAAW,CAAC;AAChC,CAAC;;AAED;AAAAE,EAAA,CAJaD,OAAO;AAKpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EACzC,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EAC3C,MAAMkB,QAAQ,GAAGb,WAAW,CAAC,CAAC,CAAC,CAAE;EACjC;EACA;EACAH,SAAS,CAAC,MAAM;IACd,MAAMiB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAIF,KAAK,EAAE;MACT,MAAMG,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;MAC3DN,OAAO,CAACO,UAAU,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,WAAW,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAC7C,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMzB,KAAK,CAACuB,KAAK,EAAEC,QAAQ,CAAC,CAAC,CAAE;MACpDZ,OAAO,CAACa,YAAY,CAAC,CAAC,CAAE;MACxBR,YAAY,CAACS,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACO,SAAS,CAACF,YAAY,CAAC,CAAC,CAAC,CAAE;MAC7DV,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAE;IACtB,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZd,QAAQ,CAAC,iCAAiC,CAAC,CAAC,CAAE;MAC9Ce,OAAO,CAAChB,KAAK,CAACe,GAAG,CAAC;IACpB;EACF,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB7B,MAAM,CAAC,CAAC,CAAC,CAAE;IACXW,OAAO,CAAC,IAAI,CAAC,CAAC,CAAE;IAChBG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAE;EACvB,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAAErB,IAAI;MAAEE,KAAK;MAAES,WAAW;MAAEQ;IAAa,CAAE;IAAArB,QAAA,EACrEA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC1B,GAAA,CArCWF,YAAY;EAAA,QAGNN,WAAW;AAAA;AAAAmC,EAAA,GAHjB7B,YAAY;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}